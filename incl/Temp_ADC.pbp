Temp_start:
    IF DS18B20 = 0 then
            do 
                OWOUT Comm_Pin, 1, [$55,$4E,0,0,DS18B20_9bit]
                gosub Temp_init
                pause 250
                gosub Temp_meas
                Temp = Temp + 1
                IF temp1 <> 85 and temp2 <> 85 THEN EXIT
            loop UNTIL Temp > 4
        else
            OWOUT Comm_Pin, 1, [$55,$4E,0,0,DS18B20_9bit]
            gosub Temp_init
    endif
    return
    
No_DS18B20:
    DS18B20 = 1
    return

Temp_init:
        OWOUT Comm_Pin, 1, [$CC,$44], No_DS18B20
        return

Temp_meas:
@  if (BikerSensor == 1)
        OWOUT   Comm_Pin, 1, [$55,$28,$13,$B4,$4B,$01,$00,$00,$93,$BE], No_DS18B20
        OWIN    Comm_Pin, 2, [R_Temp.Lowbyte, R_Temp.Highbyte], No_DS18B20      'Read two bytes
        temp1 = (R_Temp & $0FF0) >> 4                               'Mask middle 8-bits, shift into lower byte
        OWOUT   Comm_Pin, 1, [$55,$28,$7C,$B3,$4B,$01,$00,$00,$25,$BE], No_DS18B20
        OWIN    Comm_Pin, 2, [R_Temp.Lowbyte, R_Temp.Highbyte], No_DS18B20      'Read two bytes
        temp2 = (R_Temp & $0FF0) >> 4                               'Mask middle 8-bits, shift into lower byte
        return
@  endif        
@  if (BikerSensor == 0)
        OWOUT   Comm_Pin, 1, [$55,$28,$96,$3A,$4F,$01,$00,$00,$F5,$BE], No_DS18B20
        OWIN    Comm_Pin, 2, [R_Temp.Lowbyte, R_Temp.Highbyte], No_DS18B20      'Read two bytes
        temp1 = (R_Temp & $0FF0) >> 4                               'Mask middle 8-bits, shift into lower byte
        OWOUT   Comm_Pin, 1, [$55,$28,$E9,$89,$5F,$01,$00,$00,$70,$BE], No_DS18B20
        OWIN    Comm_Pin, 2, [R_Temp.Lowbyte, R_Temp.Highbyte], No_DS18B20      'Read two bytes
        temp2 = (R_Temp & $0FF0) >> 4                               'Mask middle 8-bits, shift into lower byte
        return    
@  endif

Temperature:
        if Counter = 1 and DS18B20 = 1 then
            gosub Temp_start
            DS18B20_next = 1
        endif
        if Counter = 19 and DS18B20 = 1 and DS18B20_next = 1 then
            gosub Temp_meas
            Temp1_old = Temp1
            Temp2_old = Temp2
            IF temp1 <> 85 and temp2 <> 85 THEN
                DS18B20 = 0
                DS18B20_next = 0
            endif
        endif        
        if Counter = 20 then                 '1s
            Counter = 0
            gosub Temp_meas
            gosub Meas_ADC
            gosub Temp_init
            gosub Display_Temperature
@  if (Nokia3310_7110 == 1)
            Gosub RTC_Clock_Disp
@  endif
            gosub Display_ADC
        endif
        Counter = Counter + 1
        return

Display_Temperature:
        If Temp1 > 125 then
                Temp1 = (255 - Temp1) + 1
                NEG = 1
            else
                NEG = 0
        endif
        if (ABS(Temp1 - Temp1_old)) > 10 then
            Temp1 = Temp1_old
        endif
        LcdStr(0) = Temp1 dig 2
        LcdStr(1) = Temp1 dig 1  
        LcdStr(2) = Temp1 dig 0
        PosY=1
        Temp1_old = Temp1
        gosub Display_Temperature_Sub
        
        If Temp2 > 125 then
                Temp2 = (255 - Temp2) + 1
                NEG = 1
            else
                NEG = 0
        endif               
        if (ABS(Temp2 - Temp2_old)) > 10 then
            Temp2 = Temp2_old
        endif
        LcdStr(0) = Temp2 dig 2
        LcdStr(1) = Temp2 dig 1  
        LcdStr(2) = Temp2 dig 0
        PosY=3
        Temp2_old = Temp2
        gosub Display_Temperature_Sub

Display_Temperature_Sub:
        if LcdStr(0) = 0 and LcdStr(1) = 0 then LcdStr(1) = 32
        if LcdStr(0) = 0 then LcdStr(0) = 32
        IF NEG = 1 then
            LcdStr(0) = 33
        endif
        IF DS18B20 = 1 then
            LcdStr(0) = 33
            LcdStr(1) = 33
            LcdStr(2) = 33
        endif
        
        If LcdStr(0) = 33 and LcdStr(1) = 5 and LcdStr(2) = 5 then 
            LcdStr(0) = 33
            LcdStr(1) = 33
            LcdStr(2) = 33
        endif
                
        PosX=54:Gosub Lcd_GotoXY
        Gosub Lcd_SentString2
        return        
    
Meas_ADC:
        ADCIN 0, adval
@  if (BikerSensor == 0)			
        adval = (adval*125)/200     'Old HW
@  endif
@  if (BikerSensor == 1)
        adval = (adval*88)/148     'New HW -> 0.595
@  endif
        return
        
Display_ADC:
        LcdStr(0) = adval dig 2
        LcdStr(1) = adval dig 1  
        LcdStr(2) = adval dig 0
        if LcdStr(0) = 0 then LcdStr(0) = 32
@  if (Nokia3310_7110 == 0)
        PosX=52:PosY=5:Gosub Lcd_GotoXY
@  endif
@  if (Nokia3310_7110 == 1)
        PosX=52:PosY=7:Gosub Lcd_GotoXY
@  endif
        Gosub Lcd_SentString3
        high Lcd_DC
        Lcd_Data=$40:Gosub Write_Lcd_Single
        Lcd_Data=$00:Gosub Write_Lcd_Single
        Lcd_Data=LcdStr(2)
        Gosub Lcd_SentChar
        return
